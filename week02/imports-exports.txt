Named export	          Default export
export class User {...}	  export default class User {...}
import {User} from ...	  import User from ...

*Only ONE "export default" per file

Before declaration of a class/function/…:
    export [default] class/function/variable ...
Standalone export:
    export {x [as y], ...}.
Re-export:
    export {x [as y], ...} from "module"
    export * from "module" (doesn’t re-export default).
    export {default [as y]} from "module" (re-export default).

Import:
Importing named exports:
    import {x [as y], ...} from "module"
Importing the default export:
    import x from "module"
    import {default as x} from "module"
Import all:
    import * as obj from "module"
Import the module (its code runs), but do not assign any of its exports to variables:
    import "module"

We can put import/export statements at the top or at the bottom of a script, that doesn’t matter.
In practice imports are usually at the start of the file, but that’s only for more convenience.
